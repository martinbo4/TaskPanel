@page "/TeamManagement"
@using BusinessLogic
@using BusinessLogic.DTOs
@inherits Auth
@inject UserDto UserLog
@inject TeamLogic TeamLogic

<PageTitle>UserManagement</PageTitle>

<h1>
    Team Management
    @if (UserLog.IsAdmin)
    {
        <a href="/AddTeam"  class="btn btn-success btn-sm" style="float: right;margin-right: 40px;">Add new team</a>
    }
</h1>

<h3>
    User Logged: @UserLog.FirstNameAndLastName
</h3>

<p>Here, administrators can add, remove, and modify teams.</p>

<table class="table">
    <thead>
    <tr>
        <th>Name</th>
        <th>Manager</th>
        <th>Members</th>
        <th>Max Members</th>
        <th>Description</th>
        <th>Creation Date</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var team in _teamList)
    {
        <tr>
            <td>@team.Name</td>
            <td>@team.ManagerDto.FirstNameAndLastName</td>
            @{
                int count = 0;
                string members = string.Empty;
                foreach (var member in @team.MemberDtos)
                {
                    members += member.FirstNameAndLastName;
                    count++;
                    if (count != team.MemberDtos.Count)
                    {
                        members += ", ";
                    }
                }
            }
            <td>@members</td>
            <td>@team.MaxMembers</td>
            <td>@team.Description</td>
            <td>@team.CreationDate</td>
            <td>
                @if (UserLog.IsAdmin || (@team.ManagerDto.Id == UserLog.Id))
                {
                <a class="btn btn-success btn-sm" href="/team/@team.Id/edit/">Edit</a>

                <button class="btn btn-danger btn-sm" @onclick="(() => DeleteTeam(team.Id))">Delete</button>
                }
                else
                {
                    <div class="alert alert-danger" role="alert">
                        Access Denied: You do not have the necessary permissions.
                    </div>
                }
            </td>
        </tr>
    }

    <br />

    <div class="form-error">
        @_message
    </div>

    <br />
    </tbody>
</table>
@code {
    private List<TeamDto>? _teamList = new List<TeamDto>();
    private string _message = "";
    private UserDto? _currentUser;
    
    protected override void OnInitialized()
    {
        _currentUser = UserLog;
        if (UserLog.IsAdmin)
        {
            _teamList = TeamLogic.GetAllTeams();
        }
        else
        {
            _teamList = TeamLogic.GetUserTeams(_currentUser);
        }
    }
    
    private void DeleteTeam(int id){
        try
        {
            TeamLogic.DeleteTeamById(id);
            _teamList = TeamLogic.GetUserTeams(_currentUser!);
        }
        catch (ArgumentException ex)
        {
            _message = ex.Message;
        }
    }
}