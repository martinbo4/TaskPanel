@page "/{id:int}/{idP:int}/openOverdueReactivate/"

@using BusinessLogic
@using BusinessLogic.DTOs
@inherits Auth
@inject UserDto UserLog
@inject TaskLogic TaskLogic
@inject NavigationManager NavigationManager

<h1>Overdue Reactivate</h1>

<h3>
    User Logged: @UserLog.FirstNameAndLastName
</h3>

<form>
    <div class="form-group">
        <label for="title">Title</label>
        <input type="text" class="form-control" id="title" @bind="_currentTask.Title" readonly=""/>
    </div>
    <div class="form-group">
        <label for="priority">Priority</label>
        <input type="text" class="form-control" id="priority" @bind="_currentTask.Priority" readonly/>
    </div>
    <div class="form-group">
        <label for="description">Description</label>
        <input type="text" class="form-control" id="description" @bind="_currentTask.Description" readonly/>
    </div>
    <div class="form-group">
        <label for="deadline">Deadline</label>
        <input type="text" class="form-control" id="deadline" @bind="_currentTask.Deadline"/>
    </div>

    <br />

    <div class="form-error">
        @_message
    </div>

    <br />

    <button type="button" class="btn btn-primary" @onclick="ReactivateTask">Guardar cambios</button>
    <a href="/@IdP/openOverdue/">Cancelar</a>
</form>
@code {
    [Parameter]
    public int Id { get; set; }
    [Parameter]
    public int IdP { get; set; }
    private string _message = "";
    
    private TaskDto? _currentTask;
    
    protected override void OnInitialized()
    {
        _currentTask = TaskLogic.GetTaskById(Id,IdP);
        TaskLogic.UpdateTasks();
    }
    
    private void ReactivateTask(){
        try
        {
            TaskLogic.ReactivateTask(_currentTask);
            TaskLogic.UpdateTasks();
            NavigationManager.NavigateTo($"/{IdP}/openOverdue/");
        }
        catch (ArgumentException ex)
        {
            _message = ex.Message;
        }
    }
}